
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'documentAT BANG BRACE_L BRACE_R BRACKET_L BRACKET_R COLON DOLLAR EQUALS FALSE FLOAT_VALUE FRAGMENT INT_VALUE MUTATION NAME NULL ON PAREN_L PAREN_R QUERY SPREAD STRING_VALUE TRUE\n        document : definition_list\n        \n        document : selection_set\n        \n        definition_list : definition_list definition\n        \n        definition_list : definition\n        \n        definition : operation_definition\n                   \n        \n        operation_definition : operation_type name variable_definitions directives selection_set\n        \n        operation_definition : operation_type name variable_definitions selection_set\n        \n        operation_definition : operation_type name directives selection_set\n        \n        operation_definition : operation_type name selection_set\n        \n        operation_definition : operation_type variable_definitions directives selection_set\n        \n        operation_definition : operation_type variable_definitions selection_set\n        \n        operation_definition : operation_type directives selection_set\n        \n        operation_definition : operation_type selection_set\n        \n        operation_type : QUERY\n                       | MUTATION\n        \n        selection_set : BRACE_L selection_list BRACE_R\n        \n        selection_list : selection_list selection\n        \n        selection_list : selection\n        \n        selection : field\n\n        \n        field : alias name arguments directives selection_set\n        \n        field : name arguments selection_set\n        \n        field : alias name arguments\n        \n        field : name\n        \n        directives : directive_list\n        \n        directive_list : directive_list directive\n        \n        directive_list : directive\n        \n        directive : AT name arguments\n                  | AT name\n        \n        arguments : PAREN_L argument_list PAREN_R\n        \n        argument_list : argument_list argument\n        \n        argument_list : argument\n        \n        argument : name COLON value\n        \n        variable_definitions : PAREN_L variable_definition_list PAREN_R\n        \n        variable_definition_list : variable_definition_list variable_definition\n        \n        variable_definition_list : variable_definition\n        \n        variable_definition : DOLLAR name COLON type default_value\n        \n        variable_definition : DOLLAR name COLON type\n        \n        variable : DOLLAR name\n        \n        default_value : EQUALS const_value\n        \n        name : NAME\n             | FRAGMENT\n             | QUERY\n             | MUTATION\n             | ON\n             | TRUE\n             | FALSE\n             | NULL\n        \n        alias : name COLON\n        \n        value : variable\n              | INT_VALUE\n              | FLOAT_VALUE\n              | STRING_VALUE\n              | null_value\n              | boolean_value\n              | enum_value\n              | list_value\n              | object_value\n        \n        const_value : INT_VALUE\n                    | FLOAT_VALUE\n                    | STRING_VALUE\n                    | null_value\n                    | boolean_value\n                    | enum_value\n                    | const_list_value\n                    | const_object_value\n        \n        boolean_value : TRUE\n                      | FALSE\n        \n        null_value : NULL\n        \n        enum_value : NAME\n                   | FRAGMENT\n                   | QUERY\n                   | MUTATION\n                   | ON\n        \n        list_value : BRACKET_L value_list BRACKET_R\n                   | BRACKET_L BRACKET_R\n        \n        value_list : value_list value\n        \n        value_list : value\n        \n        const_list_value : BRACKET_L const_value_list BRACKET_R\n                         | BRACKET_L BRACKET_R\n        \n        const_value_list : const_value_list const_value\n        \n        const_value_list : const_value\n        \n        object_value : BRACE_L object_field_list BRACE_R\n                     | BRACE_L BRACE_R\n        \n        object_field_list : object_field_list object_field\n        \n        object_field_list : object_field\n        \n        object_field : name COLON value\n        \n        const_object_value : BRACE_L const_object_field_list BRACE_R\n                           | BRACE_L BRACE_R\n        \n        const_object_field_list : const_object_field_list const_object_field\n        \n        const_object_field_list : const_object_field\n        \n        const_object_field : name COLON const_value\n        \n        type : named_type\n             | list_type\n             | non_null_type\n        \n        named_type : name\n        \n        list_type : BRACKET_L type BRACKET_R\n        \n        non_null_type : named_type BANG\n                      | list_type BANG\n        '
    
_lr_action_items = {'BRACE_L':([0,7,8,9,16,17,18,19,20,21,22,23,24,25,26,29,30,35,38,39,41,47,48,54,58,61,62,63,65,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,96,97,98,99,101,105,109,110,111,113,115,116,117,118,119,120,121,122,123,127,128,129,131,134,135,136,138,],[5,5,-14,-15,-40,-41,-42,-43,-44,-45,-46,-47,5,5,5,-24,-26,5,5,5,5,-25,-28,5,-33,-27,5,-29,89,-49,-50,-51,-52,-53,-54,-55,-56,-57,-68,-66,-67,-69,-70,-71,-72,-73,89,-38,89,-75,-77,-83,124,-74,-76,-82,89,-58,-59,-60,-61,-62,-63,-64,-65,124,124,-79,-81,-88,-78,-80,-87,124,]),'QUERY':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,31,32,33,36,37,40,42,43,46,49,50,51,52,55,56,57,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,100,101,102,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,],[8,8,-4,18,-5,18,-14,-15,-3,18,-18,-19,18,-23,-40,-41,-42,-43,-44,-45,-46,-47,-13,18,-16,-17,-48,18,-9,-11,-12,18,-22,-21,18,-31,-7,-8,-10,-29,-30,85,-6,18,-20,-32,-49,-50,-51,-52,-53,-54,-55,-56,-57,18,-68,-66,-67,-69,-70,-71,-72,-73,85,18,18,-38,85,-75,-77,18,-83,-85,85,-74,-76,-82,-84,85,-58,-59,-60,-61,-62,-63,-64,-65,85,18,-86,85,-79,-81,18,-88,-90,-78,-80,-87,-89,85,-91,]),'MUTATION':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,31,32,33,36,37,40,42,43,46,49,50,51,52,55,56,57,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,100,101,102,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,],[9,9,-4,19,-5,19,-14,-15,-3,19,-18,-19,19,-23,-40,-41,-42,-43,-44,-45,-46,-47,-13,19,-16,-17,-48,19,-9,-11,-12,19,-22,-21,19,-31,-7,-8,-10,-29,-30,86,-6,19,-20,-32,-49,-50,-51,-52,-53,-54,-55,-56,-57,19,-68,-66,-67,-69,-70,-71,-72,-73,86,19,19,-38,86,-75,-77,19,-83,-85,86,-74,-76,-82,-84,86,-58,-59,-60,-61,-62,-63,-64,-65,86,19,-86,86,-79,-81,19,-88,-90,-78,-80,-87,-89,86,-91,]),'$end':([1,2,3,4,6,10,27,32,40,42,43,55,56,57,66,],[0,-1,-2,-4,-5,-3,-13,-16,-9,-11,-12,-7,-8,-10,-6,]),'NAME':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,36,37,46,49,50,51,52,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,100,101,102,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,],[16,16,-14,-15,16,-18,-19,16,-23,-40,-41,-42,-43,-44,-45,-46,-47,16,-16,-17,-48,16,16,-22,-21,16,-31,-29,-30,83,16,-20,-32,-49,-50,-51,-52,-53,-54,-55,-56,-57,16,-68,-66,-67,-69,-70,-71,-72,-73,83,16,16,-38,83,-75,-77,16,-83,-85,83,-74,-76,-82,-84,83,-58,-59,-60,-61,-62,-63,-64,-65,83,16,-86,83,-79,-81,16,-88,-90,-78,-80,-87,-89,83,-91,]),'FRAGMENT':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,36,37,46,49,50,51,52,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,100,101,102,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,],[17,17,-14,-15,17,-18,-19,17,-23,-40,-41,-42,-43,-44,-45,-46,-47,17,-16,-17,-48,17,17,-22,-21,17,-31,-29,-30,84,17,-20,-32,-49,-50,-51,-52,-53,-54,-55,-56,-57,17,-68,-66,-67,-69,-70,-71,-72,-73,84,17,17,-38,84,-75,-77,17,-83,-85,84,-74,-76,-82,-84,84,-58,-59,-60,-61,-62,-63,-64,-65,84,17,-86,84,-79,-81,17,-88,-90,-78,-80,-87,-89,84,-91,]),'ON':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,36,37,46,49,50,51,52,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,100,101,102,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,],[20,20,-14,-15,20,-18,-19,20,-23,-40,-41,-42,-43,-44,-45,-46,-47,20,-16,-17,-48,20,20,-22,-21,20,-31,-29,-30,87,20,-20,-32,-49,-50,-51,-52,-53,-54,-55,-56,-57,20,-68,-66,-67,-69,-70,-71,-72,-73,87,20,20,-38,87,-75,-77,20,-83,-85,87,-74,-76,-82,-84,87,-58,-59,-60,-61,-62,-63,-64,-65,87,20,-86,87,-79,-81,20,-88,-90,-78,-80,-87,-89,87,-91,]),'TRUE':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,36,37,46,49,50,51,52,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,100,101,102,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,],[21,21,-14,-15,21,-18,-19,21,-23,-40,-41,-42,-43,-44,-45,-46,-47,21,-16,-17,-48,21,21,-22,-21,21,-31,-29,-30,81,21,-20,-32,-49,-50,-51,-52,-53,-54,-55,-56,-57,21,-68,-66,-67,-69,-70,-71,-72,-73,81,21,21,-38,81,-75,-77,21,-83,-85,81,-74,-76,-82,-84,81,-58,-59,-60,-61,-62,-63,-64,-65,81,21,-86,81,-79,-81,21,-88,-90,-78,-80,-87,-89,81,-91,]),'FALSE':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,36,37,46,49,50,51,52,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,100,101,102,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,],[22,22,-14,-15,22,-18,-19,22,-23,-40,-41,-42,-43,-44,-45,-46,-47,22,-16,-17,-48,22,22,-22,-21,22,-31,-29,-30,82,22,-20,-32,-49,-50,-51,-52,-53,-54,-55,-56,-57,22,-68,-66,-67,-69,-70,-71,-72,-73,82,22,22,-38,82,-75,-77,22,-83,-85,82,-74,-76,-82,-84,82,-58,-59,-60,-61,-62,-63,-64,-65,82,22,-86,82,-79,-81,22,-88,-90,-78,-80,-87,-89,82,-91,]),'NULL':([5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,31,32,33,36,37,46,49,50,51,52,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,100,101,102,105,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,],[23,23,-14,-15,23,-18,-19,23,-23,-40,-41,-42,-43,-44,-45,-46,-47,23,-16,-17,-48,23,23,-22,-21,23,-31,-29,-30,80,23,-20,-32,-49,-50,-51,-52,-53,-54,-55,-56,-57,23,-68,-66,-67,-69,-70,-71,-72,-73,80,23,23,-38,80,-75,-77,23,-83,-85,80,-74,-76,-82,-84,80,-58,-59,-60,-61,-62,-63,-64,-65,80,23,-86,80,-79,-81,23,-88,-90,-78,-80,-87,-89,80,-91,]),'PAREN_L':([7,8,9,15,16,17,18,19,20,21,22,23,24,34,48,],[28,-14,-15,37,-40,-41,-42,-43,-44,-45,-46,-47,28,37,37,]),'AT':([7,8,9,16,17,18,19,20,21,22,23,24,25,29,30,38,47,48,49,58,61,63,],[31,-14,-15,-40,-41,-42,-43,-44,-45,-46,-47,31,31,31,-26,31,-25,-28,31,-33,-27,-29,]),'BRACE_R':([11,12,13,15,16,17,18,19,20,21,22,23,32,33,49,50,63,68,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,89,96,98,100,101,102,109,111,112,115,116,117,118,119,120,121,122,124,126,128,130,131,132,134,136,137,139,],[32,-18,-19,-23,-40,-41,-42,-43,-44,-45,-46,-47,-16,-17,-22,-21,-29,-20,-49,-50,-51,-52,-53,-54,-55,-56,-57,-68,-66,-67,-69,-70,-71,-72,-73,101,-38,-75,111,-83,-85,-74,-82,-84,-58,-59,-60,-61,-62,-63,-64,-65,131,-86,-79,136,-88,-90,-78,-87,-89,-91,]),'COLON':([15,16,17,18,19,20,21,22,23,53,60,103,133,],[36,-40,-41,-42,-43,-44,-45,-46,-47,65,67,113,138,]),'BANG':([16,17,18,19,20,21,22,23,90,92,93,125,],[-40,-41,-42,-43,-44,-45,-46,-47,-95,106,107,-96,]),'EQUALS':([16,17,18,19,20,21,22,23,90,91,92,93,94,106,107,125,],[-40,-41,-42,-43,-44,-45,-46,-47,-95,105,-92,-93,-94,-97,-98,-96,]),'PAREN_R':([16,17,18,19,20,21,22,23,44,45,51,52,59,64,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,90,91,92,93,94,96,98,101,104,106,107,109,111,114,115,116,117,118,119,120,121,122,125,128,131,134,136,],[-40,-41,-42,-43,-44,-45,-46,-47,58,-35,63,-31,-34,-30,-32,-49,-50,-51,-52,-53,-54,-55,-56,-57,-68,-66,-67,-69,-70,-71,-72,-73,-95,-37,-92,-93,-94,-38,-75,-83,-36,-97,-98,-74,-82,-39,-58,-59,-60,-61,-62,-63,-64,-65,-96,-79,-88,-78,-87,]),'DOLLAR':([16,17,18,19,20,21,22,23,28,44,45,59,65,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,90,91,92,93,94,96,97,98,99,101,104,106,107,109,110,111,113,114,115,116,117,118,119,120,121,122,125,128,131,134,136,],[-40,-41,-42,-43,-44,-45,-46,-47,46,46,-35,-34,79,-49,-50,-51,-52,-53,-54,-55,-56,-57,-68,-66,-67,-69,-70,-71,-72,-73,79,-95,-37,-92,-93,-94,-38,79,-75,-77,-83,-36,-97,-98,-74,-76,-82,79,-39,-58,-59,-60,-61,-62,-63,-64,-65,-96,-79,-88,-78,-87,]),'BRACKET_R':([16,17,18,19,20,21,22,23,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,90,92,93,94,96,97,98,99,101,106,107,108,109,110,111,115,116,117,118,119,120,121,122,123,125,127,128,129,131,134,135,136,],[-40,-41,-42,-43,-44,-45,-46,-47,-49,-50,-51,-52,-53,-54,-55,-56,-57,-68,-66,-67,-69,-70,-71,-72,-73,98,-95,-92,-93,-94,-38,109,-75,-77,-83,-97,-98,125,-74,-76,-82,-58,-59,-60,-61,-62,-63,-64,-65,128,-96,134,-79,-81,-88,-78,-80,-87,]),'INT_VALUE':([16,17,18,19,20,21,22,23,65,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,96,97,98,99,101,105,109,110,111,113,115,116,117,118,119,120,121,122,123,127,128,129,131,134,135,136,138,],[-40,-41,-42,-43,-44,-45,-46,-47,71,-49,-50,-51,-52,-53,-54,-55,-56,-57,-68,-66,-67,-69,-70,-71,-72,-73,71,-38,71,-75,-77,-83,115,-74,-76,-82,71,-58,-59,-60,-61,-62,-63,-64,-65,115,115,-79,-81,-88,-78,-80,-87,115,]),'FLOAT_VALUE':([16,17,18,19,20,21,22,23,65,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,96,97,98,99,101,105,109,110,111,113,115,116,117,118,119,120,121,122,123,127,128,129,131,134,135,136,138,],[-40,-41,-42,-43,-44,-45,-46,-47,72,-49,-50,-51,-52,-53,-54,-55,-56,-57,-68,-66,-67,-69,-70,-71,-72,-73,72,-38,72,-75,-77,-83,116,-74,-76,-82,72,-58,-59,-60,-61,-62,-63,-64,-65,116,116,-79,-81,-88,-78,-80,-87,116,]),'STRING_VALUE':([16,17,18,19,20,21,22,23,65,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,96,97,98,99,101,105,109,110,111,113,115,116,117,118,119,120,121,122,123,127,128,129,131,134,135,136,138,],[-40,-41,-42,-43,-44,-45,-46,-47,73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-68,-66,-67,-69,-70,-71,-72,-73,73,-38,73,-75,-77,-83,117,-74,-76,-82,73,-58,-59,-60,-61,-62,-63,-64,-65,117,117,-79,-81,-88,-78,-80,-87,117,]),'BRACKET_L':([16,17,18,19,20,21,22,23,65,67,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,95,96,97,98,99,101,105,109,110,111,113,115,116,117,118,119,120,121,122,123,127,128,129,131,134,135,136,138,],[-40,-41,-42,-43,-44,-45,-46,-47,88,95,-49,-50,-51,-52,-53,-54,-55,-56,-57,-68,-66,-67,-69,-70,-71,-72,-73,88,95,-38,88,-75,-77,-83,123,-74,-76,-82,88,-58,-59,-60,-61,-62,-63,-64,-65,123,123,-79,-81,-88,-78,-80,-87,123,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'document':([0,],[1,]),'definition_list':([0,],[2,]),'selection_set':([0,7,24,25,26,35,38,39,41,54,62,],[3,27,40,42,43,50,55,56,57,66,68,]),'definition':([0,2,],[4,10,]),'operation_definition':([0,2,],[6,6,]),'operation_type':([0,2,],[7,7,]),'selection_list':([5,],[11,]),'selection':([5,11,],[12,33,]),'field':([5,11,],[13,13,]),'alias':([5,11,],[14,14,]),'name':([5,7,11,14,31,37,46,51,67,79,89,95,100,124,130,],[15,24,15,34,48,53,60,53,90,96,103,90,103,133,133,]),'variable_definitions':([7,24,],[25,38,]),'directives':([7,24,25,38,49,],[26,39,41,54,62,]),'directive_list':([7,24,25,38,49,],[29,29,29,29,29,]),'directive':([7,24,25,29,38,49,],[30,30,30,47,30,30,]),'arguments':([15,34,48,],[35,49,61,]),'variable_definition_list':([28,],[44,]),'variable_definition':([28,44,],[45,59,]),'argument_list':([37,],[51,]),'argument':([37,51,],[52,64,]),'value':([65,88,97,113,],[69,99,110,126,]),'variable':([65,88,97,113,],[70,70,70,70,]),'null_value':([65,88,97,105,113,123,127,138,],[74,74,74,118,74,118,118,118,]),'boolean_value':([65,88,97,105,113,123,127,138,],[75,75,75,119,75,119,119,119,]),'enum_value':([65,88,97,105,113,123,127,138,],[76,76,76,120,76,120,120,120,]),'list_value':([65,88,97,113,],[77,77,77,77,]),'object_value':([65,88,97,113,],[78,78,78,78,]),'type':([67,95,],[91,108,]),'named_type':([67,95,],[92,92,]),'list_type':([67,95,],[93,93,]),'non_null_type':([67,95,],[94,94,]),'value_list':([88,],[97,]),'object_field_list':([89,],[100,]),'object_field':([89,100,],[102,112,]),'default_value':([91,],[104,]),'const_value':([105,123,127,138,],[114,129,135,139,]),'const_list_value':([105,123,127,138,],[121,121,121,121,]),'const_object_value':([105,123,127,138,],[122,122,122,122,]),'const_value_list':([123,],[127,]),'const_object_field_list':([124,],[130,]),'const_object_field':([124,130,],[132,137,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> document","S'",1,None,None,None),
  ('document -> definition_list','document',1,'p_document','parser.py',42),
  ('document -> selection_set','document',1,'p_document_shorthand','parser.py',48),
  ('definition_list -> definition_list definition','definition_list',2,'p_definition_list','parser.py',72),
  ('definition_list -> definition','definition_list',1,'p_definition_list_single','parser.py',78),
  ('definition -> operation_definition','definition',1,'p_definition','parser.py',84),
  ('operation_definition -> operation_type name variable_definitions directives selection_set','operation_definition',5,'p_operation_definition1','parser.py',98),
  ('operation_definition -> operation_type name variable_definitions selection_set','operation_definition',4,'p_operation_definition2','parser.py',109),
  ('operation_definition -> operation_type name directives selection_set','operation_definition',4,'p_operation_definition3','parser.py',119),
  ('operation_definition -> operation_type name selection_set','operation_definition',3,'p_operation_definition4','parser.py',129),
  ('operation_definition -> operation_type variable_definitions directives selection_set','operation_definition',4,'p_operation_definition5','parser.py',135),
  ('operation_definition -> operation_type variable_definitions selection_set','operation_definition',3,'p_operation_definition6','parser.py',145),
  ('operation_definition -> operation_type directives selection_set','operation_definition',3,'p_operation_definition7','parser.py',154),
  ('operation_definition -> operation_type selection_set','operation_definition',2,'p_operation_definition8','parser.py',163),
  ('operation_type -> QUERY','operation_type',1,'p_operation_type','parser.py',169),
  ('operation_type -> MUTATION','operation_type',1,'p_operation_type','parser.py',170),
  ('selection_set -> BRACE_L selection_list BRACE_R','selection_set',3,'p_selection_set','parser.py',176),
  ('selection_list -> selection_list selection','selection_list',2,'p_selection_list','parser.py',182),
  ('selection_list -> selection','selection_list',1,'p_selection_list_single','parser.py',188),
  ('selection -> field','selection',1,'p_selection','parser.py',194),
  ('field -> alias name arguments directives selection_set','field',5,'p_field_all','parser.py',203),
  ('field -> name arguments selection_set','field',3,'p_field_optional2_2','parser.py',241),
  ('field -> alias name arguments','field',3,'p_field_optional2_6','parser.py',265),
  ('field -> name','field',1,'p_field_optional4','parser.py',295),
  ('directives -> directive_list','directives',1,'p_directives','parser.py',360),
  ('directive_list -> directive_list directive','directive_list',2,'p_directive_list','parser.py',366),
  ('directive_list -> directive','directive_list',1,'p_directive_list_single','parser.py',372),
  ('directive -> AT name arguments','directive',3,'p_directive','parser.py',378),
  ('directive -> AT name','directive',2,'p_directive','parser.py',379),
  ('arguments -> PAREN_L argument_list PAREN_R','arguments',3,'p_arguments','parser.py',386),
  ('argument_list -> argument_list argument','argument_list',2,'p_argument_list','parser.py',392),
  ('argument_list -> argument','argument_list',1,'p_argument_list_single','parser.py',398),
  ('argument -> name COLON value','argument',3,'p_argument','parser.py',404),
  ('variable_definitions -> PAREN_L variable_definition_list PAREN_R','variable_definitions',3,'p_variable_definitions','parser.py',410),
  ('variable_definition_list -> variable_definition_list variable_definition','variable_definition_list',2,'p_variable_definition_list','parser.py',416),
  ('variable_definition_list -> variable_definition','variable_definition_list',1,'p_variable_definition_list_single','parser.py',422),
  ('variable_definition -> DOLLAR name COLON type default_value','variable_definition',5,'p_variable_definition1','parser.py',428),
  ('variable_definition -> DOLLAR name COLON type','variable_definition',4,'p_variable_definition2','parser.py',434),
  ('variable -> DOLLAR name','variable',2,'p_variable','parser.py',440),
  ('default_value -> EQUALS const_value','default_value',2,'p_default_value','parser.py',446),
  ('name -> NAME','name',1,'p_name','parser.py',452),
  ('name -> FRAGMENT','name',1,'p_name','parser.py',453),
  ('name -> QUERY','name',1,'p_name','parser.py',454),
  ('name -> MUTATION','name',1,'p_name','parser.py',455),
  ('name -> ON','name',1,'p_name','parser.py',456),
  ('name -> TRUE','name',1,'p_name','parser.py',457),
  ('name -> FALSE','name',1,'p_name','parser.py',458),
  ('name -> NULL','name',1,'p_name','parser.py',459),
  ('alias -> name COLON','alias',2,'p_alias','parser.py',465),
  ('value -> variable','value',1,'p_value','parser.py',471),
  ('value -> INT_VALUE','value',1,'p_value','parser.py',472),
  ('value -> FLOAT_VALUE','value',1,'p_value','parser.py',473),
  ('value -> STRING_VALUE','value',1,'p_value','parser.py',474),
  ('value -> null_value','value',1,'p_value','parser.py',475),
  ('value -> boolean_value','value',1,'p_value','parser.py',476),
  ('value -> enum_value','value',1,'p_value','parser.py',477),
  ('value -> list_value','value',1,'p_value','parser.py',478),
  ('value -> object_value','value',1,'p_value','parser.py',479),
  ('const_value -> INT_VALUE','const_value',1,'p_const_value','parser.py',485),
  ('const_value -> FLOAT_VALUE','const_value',1,'p_const_value','parser.py',486),
  ('const_value -> STRING_VALUE','const_value',1,'p_const_value','parser.py',487),
  ('const_value -> null_value','const_value',1,'p_const_value','parser.py',488),
  ('const_value -> boolean_value','const_value',1,'p_const_value','parser.py',489),
  ('const_value -> enum_value','const_value',1,'p_const_value','parser.py',490),
  ('const_value -> const_list_value','const_value',1,'p_const_value','parser.py',491),
  ('const_value -> const_object_value','const_value',1,'p_const_value','parser.py',492),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','parser.py',498),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','parser.py',499),
  ('null_value -> NULL','null_value',1,'p_null_value','parser.py',505),
  ('enum_value -> NAME','enum_value',1,'p_enum_value','parser.py',511),
  ('enum_value -> FRAGMENT','enum_value',1,'p_enum_value','parser.py',512),
  ('enum_value -> QUERY','enum_value',1,'p_enum_value','parser.py',513),
  ('enum_value -> MUTATION','enum_value',1,'p_enum_value','parser.py',514),
  ('enum_value -> ON','enum_value',1,'p_enum_value','parser.py',515),
  ('list_value -> BRACKET_L value_list BRACKET_R','list_value',3,'p_list_value','parser.py',521),
  ('list_value -> BRACKET_L BRACKET_R','list_value',2,'p_list_value','parser.py',522),
  ('value_list -> value_list value','value_list',2,'p_value_list','parser.py',528),
  ('value_list -> value','value_list',1,'p_value_list_single','parser.py',534),
  ('const_list_value -> BRACKET_L const_value_list BRACKET_R','const_list_value',3,'p_const_list_value','parser.py',540),
  ('const_list_value -> BRACKET_L BRACKET_R','const_list_value',2,'p_const_list_value','parser.py',541),
  ('const_value_list -> const_value_list const_value','const_value_list',2,'p_const_value_list','parser.py',547),
  ('const_value_list -> const_value','const_value_list',1,'p_const_value_list_single','parser.py',553),
  ('object_value -> BRACE_L object_field_list BRACE_R','object_value',3,'p_object_value','parser.py',559),
  ('object_value -> BRACE_L BRACE_R','object_value',2,'p_object_value','parser.py',560),
  ('object_field_list -> object_field_list object_field','object_field_list',2,'p_object_field_list','parser.py',566),
  ('object_field_list -> object_field','object_field_list',1,'p_object_field_list_single','parser.py',574),
  ('object_field -> name COLON value','object_field',3,'p_object_field','parser.py',580),
  ('const_object_value -> BRACE_L const_object_field_list BRACE_R','const_object_value',3,'p_const_object_value','parser.py',586),
  ('const_object_value -> BRACE_L BRACE_R','const_object_value',2,'p_const_object_value','parser.py',587),
  ('const_object_field_list -> const_object_field_list const_object_field','const_object_field_list',2,'p_const_object_field_list','parser.py',593),
  ('const_object_field_list -> const_object_field','const_object_field_list',1,'p_const_object_field_list_single','parser.py',601),
  ('const_object_field -> name COLON const_value','const_object_field',3,'p_const_object_field','parser.py',607),
  ('type -> named_type','type',1,'p_type','parser.py',613),
  ('type -> list_type','type',1,'p_type','parser.py',614),
  ('type -> non_null_type','type',1,'p_type','parser.py',615),
  ('named_type -> name','named_type',1,'p_named_type','parser.py',621),
  ('list_type -> BRACKET_L type BRACKET_R','list_type',3,'p_list_type','parser.py',627),
  ('non_null_type -> named_type BANG','non_null_type',2,'p_non_null_type','parser.py',633),
  ('non_null_type -> list_type BANG','non_null_type',2,'p_non_null_type','parser.py',634),
]
